<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Methods on Michael DeCrescenzo</title>
    <link>/tags/methods/</link>
    <description>Recent content in Methods on Michael DeCrescenzo</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator>
    <language>en-us</language>
    <copyright>&amp;copy; Michael DeCrescenzo {year}</copyright>
    <lastBuildDate>Sun, 26 Apr 2020 00:00:00 +0000</lastBuildDate>
    
	    <atom:link href="/tags/methods/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Do Primaries Work? Bayesian Causal Models of Partisan Ideology and Congressional Nominations
</title>
      <link>/research/dissertation/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>/research/dissertation/</guid>
      <description>&lt;h2 id=&#34;abstract&#34;&gt;Abstract&lt;/h2&gt;
&lt;p&gt;As partisanship increasingly drives general election competition in the U.S., party nomination contests seem increasingly important in determining who represents a district in Congress.
At the same time, many ideas about how primaries affect representation in the U.S. are not supported by empirical research.
Do primary elections faithfully represent the policy preferences of local partisan voters?&lt;/p&gt;
&lt;p&gt;Political scientists believe that candidates for office face a trade-off in the way they position themselves ideologically.
To win the nomination, candidate must champion their party&amp;rsquo;s values, but winning the general election requires the support of a broader cross-section of the electorate.
Political scientists have called termed this the &amp;ldquo;strategic positioning dilemma&amp;rdquo;—the candidate must be partisan enough to win the nomination, but not so partisan that they lose the general election.&lt;/p&gt;
&lt;p&gt;This theory of primaries rests on shaky ground both theoretically and empirically.
Theoretically, primary elections present voters with high informational demands.
Learning the policy positions of different candidates is costly, especially when all candidates share the same party label.
Moreover, a candidate&amp;rsquo;s support among informal networks of party-aligned interest groups may be more important to their nominations than their ideological &amp;ldquo;fit&amp;rdquo; with partisan voters in the district.
Empirically, research of representation in primaries is held back by a limited understanding of local partisans&amp;rsquo; policy preferences.
Most existing research measures voters&amp;rsquo; preferences using coarse proxies that do not distinguish between Republican and Democratic groups or may not meaningfully capture policy preferences at all.&lt;/p&gt;
&lt;p&gt;This dissertation seeks to improve the measurement of the policy preferences of partisan voters at the local level and apply these new measures to the study of representation in primary elections.
Along the way, it exposes and clarifies key causal assumptions at work in prior research, and it explores new methodological tools for the statistical analysis of a broader range of causal inference problems in political science.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;non-id.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;goals-of-this-project&#34;&gt;Goals of this project:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create novel estimates for the policy ideology (ideal points) of partisan groups within Congressional districts—435 districts x 2 parties = 870 groups—using custom Bayesian IRT modeling approach.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Apply novel estimates of local partisan preferences to test key theoretical claims about representation in primary elections: does the extremism/moderation of local ideology (&lt;em&gt;X&lt;/em&gt;) meaningfully affect the extremism/moderation of primary candidates for Congress (&lt;em&gt;Y1&lt;/em&gt;) and the extremism/moderation of the candidate eventually selected to run in the general election (&lt;em&gt;Y2&lt;/em&gt;)?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Explore a Bayesian framework for causal inference in political science: formal notation, theoretical clarity on the meaning and application of priors, and practical guidance for pragmatic causal inference with Bayesian value-added.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Extend Bayesian framework to computational causal inference approaches using machine learning methods, with a focus on structural causal models (DAGs) and neural networks.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
    <item>
      <title>Causal Inference Reading Group
</title>
      <link>/teaching/causal-inf-2019/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>/teaching/causal-inf-2019/</guid>
      <description>&lt;p&gt;In 2019 I organized and led discussion for a summer reading group on causal inference methods.
Much of the material focused on &amp;ldquo;the view from political science,&amp;rdquo; but we often brought in resources from statistics, economics, and epidemiology.
We explored potential outcomes and graphical models for causal inference, with estimation approaches covering regression approaches, propensity score adjustments, and other structural models.&lt;/p&gt;
&lt;p&gt;The reading list below contains both the assigned and the &amp;ldquo;bonus&amp;rdquo; readings.&lt;/p&gt;
&lt;h2 id=&#34;readings&#34;&gt;Readings&lt;/h2&gt;
&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Rubin (1974), &lt;a href=&#34;http://www.fsb.muohio.edu/lij14/420_paper_Rubin74.pdf&#34;&gt;&amp;ldquo;Estimating Causal Effects of Treatments in Randomized and Nonrandomized Studies&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;LaLonde (1986), &lt;a href=&#34;https://www.jstor.org/stable/pdf/1806062.pdf?casa_token=F5r8Z1JwiHMAAAAA:dJ7TKfvXSkhNZWr20eLIV3V7v1SuPWSh-i_98wRQl3jf4gadsB-K8UsSiWV2-QcaEj4AUR6Bpg2yG5e3wH6SRsIxEzqwzuxY5ySQ1DyE8rUqpNo8Wg&#34;&gt;&amp;ldquo;Evaluating the Econometric Evaluations of Training Programs with Experimental Data&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;McElreath (2019), &lt;a href=&#34;https://youtu.be/l_7yIUqWBmE&#34;&gt;&amp;ldquo;Statistical Rethinking 2019&amp;rdquo; Lecture 6 (DAGs)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Aronow and Samii (2016), &lt;a href=&#34;https://onlinelibrary.wiley.com/doi/pdf/10.1111/ajps.12185?casa_token=ni-7Ez1IOr0AAAAA:iaBEJKWKDCduQDQjgE1YOtbkJTtSDO9Z6-xlY7PreUPM4IzwJ634U9kZvovCAGE_25W4shlhNKnGJrQ&#34;&gt;&amp;ldquo;Does Regression Produce Representative Estimates of Causal Effects?&amp;quot;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;causal-identification&#34;&gt;Causal Identification&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Holland (1986), &lt;a href=&#34;https://www.jstor.org/stable/pdf/2289064.pdf?casa_token=t__em5YLS3QAAAAA:bRijEbuXZ1vc8wndntsVlUSkP8HGfHtd5gzBT7xGuvtMQ4bbpxATiou0wIcWv-h7TsFeISmNgAWK3MywsZD3izZ7dlknR_Lu6iCTo-xVP4ZlZPcJ8w&#34;&gt;&amp;ldquo;Statistics and Causal Inference&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Kang and Schafer (2007), &lt;a href=&#34;https://projecteuclid.org/download/pdfview_1/euclid.ss/1207580167&#34;&gt;&amp;ldquo;Demystifying Double Robustness: A Comparison of Alternative Strategies for Estimating a Population Mean from Incomplete Data&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Sekhon (2007), &lt;a href=&#34;https://www.researchgate.net/profile/Henry_Brady/publication/255476843_The_Neyman-Rubin_Model_of_Causal_Inference_and_Estimation_Via_Matching_Methods/links/54d8dd670cf25013d0405ce3/The-Neyman-Rubin-Model-of-Causal-Inference-and-Estimation-Via-Matching-Methods.pdf&#34;&gt;&amp;ldquo;The Neyman-Rubin Model of Causal Inference and Estimation via Matching Methods&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Stuart (2010), &lt;a href=&#34;https://projecteuclid.org/download/pdfview_1/euclid.ss/1280841730&#34;&gt;&amp;ldquo;Matching methods for causal inference: A review and a look forward&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Bowers, Fredrickson, and Panagopoulos (2013), &lt;a href=&#34;https://www.jstor.org/stable/pdf/23359695.pdf?casa_token=wI0j9lMiDx0AAAAA:tnvEGu14_-fGNjbUZxLq0ln9foKBOd85zKIor3nQYj3pwxo4ch_wXQyZ_qeTSBxngpQjfOBNZwKr3ARWj1uBjGbnxWQ7LFyTWHZGX7og8udmimMLGA&#34;&gt;&amp;ldquo;Reasoning about Interference Between Units: A General Framework&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Hartman, Grieve, Ramsahai, and Sekhon (2015), &lt;a href=&#34;https://rss.onlinelibrary.wiley.com/doi/pdf/10.1111/rssa.12094&#34;&gt;&amp;ldquo;From sample average treatment effect to population average treatment effect on the treated: combining experimental with observational studies to estimate population treatment effects&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Keele (2015), &lt;a href=&#34;https://www.jstor.org/stable/pdf/24573164.pdf?casa_token=o7xKm1U2WtUAAAAA:auheq_VJJPJA_i92nhwMo0gPZAKS7NeVL9qgsAsXi2JQk0UYqInRMaVmF-EY14Siq4eS1-ZmIaSj30Dr3trXzWbzEWeoEvhNeQVT42vGxAxGqIyTQw&#34;&gt;&amp;ldquo;The statistics of causal inference: A view from political methodology&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Hartman and Hidalgo (2018), &lt;a href=&#34;https://onlinelibrary.wiley.com/doi/pdf/10.1111/ajps.12387?casa_token=fuTLoS2dIhgAAAAA:MTLN-y62YNdgtSmT7lDUAO3z4zvDsDpjGdTrwwwYbxgD4vYqJXcCTmjgtw5RxeDouIzNFrlXNmsiFw&#34;&gt;&amp;ldquo;An equivalence approach to balance and placebo tests&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;causal-mediation&#34;&gt;Causal Mediation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Imai, Keele, Tingley, and Yamamoto (2010), &lt;a href=&#34;https://www.jstor.org/stable/pdf/23275352.pdf?casa_token=ijN2lRaBMnMAAAAA:Bcg68xjAPuuy-8adQxtg0fkSYL2GZqy2pAOcQj6r7aJkl3mqyQYv1qIGm_ZzLAhGD46PhBPXy_vt3vqRhr2YondO4BjuNkQzKsTz43iXYcYg11XxzA&#34;&gt;&amp;ldquo;Unpacking the black box of causality: Learning about causal mechanisms from experimental and observational studies&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;VanderWeele and Vansteelandt (2015), &lt;a href=&#34;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4287269/pdf/nihms-633002.pdf&#34;&gt;&amp;ldquo;Mediation Analysis with Multiple Mediators&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Myers and Tingley (2016), &lt;a href=&#34;https://www.cambridge.org/core/journals/political-analysis/article/influence-of-emotion-on-trust/2A90FCCAA46B8EF2B41308C7C80E876B&#34;&gt;&amp;ldquo;The Influence of Emotion on Trust&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;causal-heterogeneity&#34;&gt;Causal Heterogeneity&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Kam and Trussler (2017) &lt;a href=&#34;https://link.springer.com/content/pdf/10.1007%2Fs11109-016-9379-z.pdf&#34;&gt;&amp;ldquo;At the Nexus of Observational and Experimental Research: Theory, Specification, and Analysis of Experiments with Heterogeneous Treatment Effects&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Coppock, Leeper, and Mullinix (2017), &lt;a href=&#34;https://www.pnas.org/content/pnas/115/49/12441.full.pdf&#34;&gt;&amp;ldquo;Generalizability of heterogeneous treatment effect estimates across samples&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Meager (2019), &lt;a href=&#34;http://eprints.lse.ac.uk/88190/1/app.20170299.pdf&#34;&gt;&amp;ldquo;Understanding the Average Impact of Microcredit Expansions: A Bayesian Hierarchical Analysis of Seven Randomized Experiments&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;null-effects-and-statistical-power&#34;&gt;Null Effects and Statistical Power&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Mayo (2004), &lt;a href=&#34;https://www.phil.vt.edu/dmayo/personal_website/evidence_MAYO_opt.pdf&#34;&gt;&amp;ldquo;An error-statistical philosophy of evidence&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Broockman (2014), &lt;a href=&#34;https://www.sciencedirect.com/science/article/pii/S0261379413001583&#34;&gt;&amp;ldquo;Do female politicians empower women to vote or run for office? A regression discontinuity approach&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Gelman and Carlin (2014), &lt;a href=&#34;https://journals.sagepub.com/doi/pdf/10.1177/1745691614551642&#34;&gt;&amp;ldquo;Beyond Power Calculations: Assessing Type S (Sign) and Type M (Magnitude) Errors&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Bhavnani (2017), &lt;a href=&#34;https://pubs.aeaweb.org/doi/pdfplus/10.1257/app.20160030&#34;&gt;&amp;ldquo;Do the Effects of Temporary Ethnic Group Quotas Persist? Evidence from India&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Coppenolle (2017), &lt;a href=&#34;https://onlinelibrary.wiley.com/doi/epdf/10.1111/lsq.12164&#34;&gt;&amp;ldquo;Political Dynasties in the UK House of Commons: The Null Effect of Narrow Electoral Selection&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Loken and Gelman (2017), &lt;a href=&#34;http://www.stat.columbia.edu/~gelman/research/published/measurement.pdf&#34;&gt;&amp;ldquo;Measurement error and the replication crisis&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fowler (2019), &lt;a href=&#34;https://thepoliticalmethodologist.com/2019/05/24/but-shouldnt-that-work-against-me/&#34;&gt;&amp;ldquo;But Shouldn’t That Work Against Me?&amp;quot;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;g-methods&#34;&gt;G-Methods&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Naimi, Cole, and Kennedy (2017), &lt;a href=&#34;https://watermark.silverchair.com/dyw323.pdf?token=AQECAHi208BE49Ooan9kkhW_Ercy7Dm3ZL_9Cf3qfKAc485ysgAAAjowggI2BgkqhkiG9w0BBwagggInMIICIwIBADCCAhwGCSqGSIb3DQEHATAeBglghkgBZQMEAS4wEQQMlLYhK-XfIUHDcRhIAgEQgIIB7Xps8vAzzNwv6RuE8NwHCHcE_n_w0UzDvZlYG5u0NhLLLspOzyfJjN1PbwTCUcf1zlFZ_uXQzVn8ObXIX3WwZl-9v-WYtAetq3Kf6709OeSsaQhyFo8ssXvhor-qfJ4D4zwJpCFi58sm95sQ73Ifn1z1hzUgKuNFe_xaBwP2Zkd4va0yUYj3IIzHLU6y9sauuxbWKvALysdW8se9PQdzON_lfyPTAEGLx1katG9k0kRdABGcrOL0ODhTlZHc-uODteK-jwFYqOp36qKOl1prnINhTpBVaoUKPiBqC_Rs0rzsEKBPmYtg3-0glrCi9cssBQ5L9id5v3UskEZ3immwewUuqKuHbf-1SLzTGFmBLt6u8GdOZZzLTT32mRduX-rueaZoSHD8gAE1xq123-bBTO3W7rdD2yWgG6tkTGFux91vGRhMd9PxerJ1k5UU_382jz5PomFArHwp3pwowr3INn_5Q7xlrd_OhPh0G0vyps2xQu2b9HugYVOfJVR3OBV2u9BINUCMpIhaVL3rS8ePByFhjaQVGF2iSzS7iqQ9tCIlH7xf2hSfiHjztJAGw09NkIxTyTt_Nj8HHk2wih2OMIiKhXGXlXpVYxha6m_lKDldSb_XUBQqDvCGcoUIVGVV7eFtcLkdpTq_VY-BJMw&#34;&gt;&amp;ldquo;An introduction to g methods&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Acharya, Blackwell, and Sen (2016), &lt;a href=&#34;https://pdfs.semanticscholar.org/553b/d629b87aab05781cca1f3b0e42358d74fbda.pdf&#34;&gt;&amp;ldquo;Explaining Causal Findings Without Bias: Detecting and Assessing Direct Effects&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;dags-1&#34;&gt;DAGs (1)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Greenland, Pearl, Robins (1999), &lt;a href=&#34;https://ftp.cs.ucla.edu/pub/stat_ser/r251.pdf&#34;&gt;&amp;ldquo;Causal Diagrams for Epidemiological Research&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Keele, Stevenson, and Elwert (2019) &lt;a href=&#34;https://www.cambridge.org/core/services/aop-cambridge-core/content/view/4488EC8925CF8F623CDE655E01268F6F/S2049847019000311a.pdf/causal_interpretation_of_estimated_associations_in_regression_models.pdf&#34;&gt;&amp;ldquo;The causal interpretation of estimated associations in regression models&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;dags-2&#34;&gt;DAGs (2)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;VanderWeele and Robins (2014) &lt;a href=&#34;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4239133/pdf/nihms632478.pdf&#34;&gt;&amp;ldquo;Signed directed acyclic graphs for causal inference&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Mohan and Pearl (2014), &lt;a href=&#34;https://papers.nips.cc/paper/5575-graphical-models-for-recovering-probabilistic-and-causal-queries-from-missing-data.pdf&#34;&gt;&amp;ldquo;Graphical Models for Recovering Probabilistic and Causal Queries from Missing Data&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Imbens (2019), &lt;a href=&#34;https://arxiv.org/abs/1907.07271&#34;&gt;&amp;ldquo;Potential Outcome and Directed Acyclic Graph Approaches to Causality: Relevance for Empirical Practice in Economics&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Lattimore and Rohde (2019), &lt;a href=&#34;https://arxiv.org/pdf/1906.07125.pdf&#34;&gt;&amp;ldquo;Replacing the do-calculus with Bayes rule&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;machine-learning&#34;&gt;Machine Learning&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Hastie, Tibshirani, and Friedman (2009) &lt;a href=&#34;https://web.stanford.edu/~hastie/Papers/ESLII.pdf&#34;&gt;&amp;ldquo;The Elements of Statistical Learning Data Mining, Inference, and Prediction (2 ed.)&amp;quot;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Hill (2011), &lt;a href=&#34;https://www.tandfonline.com/doi/pdf/10.1198/jcgs.2010.08162?casa_token=LzuXt92SeEoAAAAA:KW4xyog-6_yOMM7B5zPiqpHdUQv7eLIf0fIdHPTKMxv5FHX5mfbnb9hQnjc2EzLhU_4FjY3lh5E&#34;&gt;&amp;ldquo;Bayesian Nonparametric Modeling for Causal Inference&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Samii, Paler, and Daly (2016), &lt;a href=&#34;https://www.cambridge.org/core/journals/political-analysis/article/retrospective-causal-inference-with-machine-learning-ensembles-an-application-to-antirecidivism-policies-in-colombia/B27477770599A4CE0ACB9204685EA95B&#34;&gt;&amp;ldquo;Retrospective causal inference with machine learning ensembles: An application to anti-recidivism policies in Colombia&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Wager and Athey (2018), &lt;a href=&#34;https://www.tandfonline.com/doi/pdf/10.1080/01621459.2017.1319839?needAccess=true&#34;&gt;&amp;ldquo;Estimation and Inference of Heterogeneous Treatment Effects using Random Forests&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Abraham and Sun (2019), &lt;a href=&#34;http://economics.mit.edu/files/14964&#34;&gt;&amp;ldquo;Estimating Dynamic Treatment Effects in Event Studies with Heterogeneous Treatment Effects&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Cheng, Khomtchouk, Matloff, and Mohanty (2019), &lt;a href=&#34;https://arxiv.org/pdf/1806.06850.pdf&#34;&gt;&amp;ldquo;Polynomial Regression as an Alternative to Neural Nets&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Hahn, Murray, and Carvalho (2019), &lt;a href=&#34;https://arxiv.org/pdf/1706.09523.pdf&#34;&gt;&amp;ldquo;Bayesian Regression Tree Models for Causal Inference: Regularization, Confounding, and Heterogeneous Effects&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;McElreath (2019), &lt;a href=&#34;https://youtu.be/pwMRbt2CbSU&#34;&gt;&amp;ldquo;Statistical Rethinking 2019&amp;rdquo; Lecture 19 (Gaussian Processes)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;regression-discontinuity&#34;&gt;Regression Discontinuity&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Calonico, Cattaneo, and Titiunik (2014), &lt;a href=&#34;https://onlinelibrary.wiley.com/doi/pdf/10.3982/ECTA11757?casa_token=ReSBtC9lfNsAAAAA:i6a-m-R6qyB0wsn5v1Y76d0MrIEalQO-QuXiknTrJCCXBXbxxWLNXyV092CCROUyWlO8gAiXrP2Nvw&#34;&gt;&amp;ldquo;Robust Nonparametric Confidence Intervals for Regression-discontinuity Designs&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Caughey and Sekhon (2014), &lt;a href=&#34;http://zmjones.com/static/causal-inference/caughey-pa-2011.pdf&#34;&gt;&amp;ldquo;Elections and the regression discontinuity design: Lessons from close US house races, 1942–2008&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Skovron and Titiunik (2015), &lt;a href=&#34;https://pdfs.semanticscholar.org/5461/c817976f51a4fb0073b772c03cd670be8def.pdf&#34;&gt;&amp;ldquo;A Practical Guide to Regression Discontinuity
Designs in Political Science&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Imbens and Wager (2019), &lt;a href=&#34;https://www.mitpressjournals.org/doi/pdfplus/10.1162/rest_a_00793?casa_token=fhbRGkrXL4EAAAAA:UpisrmCWbq4jGpVRfrdNcSqRxbaFmPDuK6f6P17oSu4XQCY2UFaj0mNIVdHkxjVIaZItXKCv&#34;&gt;&amp;ldquo;Optimized Regression Discontinuity Designs&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;time-series-cross-sectional-and-panel-data&#34;&gt;Time-Series Cross-Sectional and Panel Data&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Blackwell and Glynn (2018), &lt;a href=&#34;https://www.cambridge.org/core/journals/american-political-science-review/article/how-to-make-causal-inferences-with-timeseries-crosssectional-data-under-selection-on-observables/498BE04E5AF9802EC4D33DD7A4016584&#34;&gt;&amp;ldquo;How to Make Causal Inferences with Time-Series Cross-Sectional Data under Selection on Observables&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Goodman-Bacon (2018), &lt;a href=&#34;https://cdn.vanderbilt.edu/vu-my/wp-content/uploads/sites/2318/2019/04/14141044/ddtiming_9_5_2018.pdf&#34;&gt;&amp;ldquo;Difference-in-Differences with Variation in Treatment Timing&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Torres (2019), &lt;a href=&#34;https://www.dropbox.com/s/872jdkg3dgo8ics/MSM_PSRM_2.pdf?dl=0&#34;&gt;&amp;ldquo;Estimating Controlled Direct Effects Through Marginal Structural Models&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>PS 270: Understanding Political Numbers
</title>
      <link>/teaching/numbers/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>/teaching/numbers/</guid>
      <description>&lt;p&gt;Data are increasingly prevalent in politics (and in journalism, industry, academia&amp;hellip;), but data are complex and challenging. What can we learn about politics, and the social world more broadly, when we take an empirical view of it? When should we trust data, and when will data lead us astray?&lt;/p&gt;
&lt;p&gt;Political science 270 is an undergraduate course on consuming, criticizing, and producing data-driven analysis of political and social phenomena. Students learn to think about political data as evidence for or against social theories. The course emphasis practical data analysis skills that apply beyond the political science curriculum, including elementary statistical analysis, R programming (&lt;code&gt;Rstudio&lt;/code&gt;, &lt;code&gt;tidyverse&lt;/code&gt;, &lt;code&gt;ggplot2&lt;/code&gt;), and technical writing.&lt;/p&gt;
&lt;p&gt;View course materials on &lt;a href=&#34;https://github.com/mikedecr/political-numbers-s19/&#34;&gt;&lt;code&gt;Github&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PS 811: Introductory Statistical Computing for Political Science
</title>
      <link>/teaching/computing-811/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>/teaching/computing-811/</guid>
      <description>&lt;h2 id=&#34;2020-materials&#34;&gt;2020 Materials&lt;/h2&gt;
&lt;p&gt;View syllabus &lt;a href=&#34;/courses/811/ps811-s20-syllabus.pdf&#34;&gt;here&lt;/a&gt;. Weekly materials below:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Introduction. &lt;a href=&#34;/teaching/computing-811/slides/01-intro/01-intro.html&#34;&gt;[Slides]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Projects &amp;amp; Intro R Markdown. &lt;a href=&#34;/teaching/computing-811/slides/02-rmd-proj/02-rmd-proj.html&#34;&gt;[Slides]&lt;/a&gt; &lt;a href=&#34;https://github.com/mikedecr/example-project&#34;&gt;[Example Project]&lt;/a&gt; &lt;a href=&#34;https://github.com/mikedecr/PS811-computing/blob/master/code/Rmd/rmarkdown-demo.Rmd&#34;&gt;[Rmd Demo]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Basics of R. &lt;a href=&#34;https://github.com/mikedecr/PS811-computing/blob/master/code/01_basics.R&#34;&gt;[Script]&lt;/a&gt; &lt;a href=&#34;https://github.com/mikedecr/PS811-computing/blob/master/assignments/skill-1/skill-task-1.pdf&#34;&gt;[Homework]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Data Manipulation (&lt;code&gt;tidyverse&lt;/code&gt;/&lt;code&gt;dplyr&lt;/code&gt;). &lt;a href=&#34;https://github.com/mikedecr/PS811-computing/blob/master/code/02_data-manipulation.R&#34;&gt;[Script]&lt;/a&gt; &lt;a href=&#34;https://github.com/mikedecr/PS811-computing/blob/master/assignments/skill-2/skills-task-2.pdf&#34;&gt;[Homework]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Graphics (&lt;code&gt;ggplot2&lt;/code&gt;). &lt;a href=&#34;https://github.com/mikedecr/PS811-computing/blob/master/code/03_graphics.R&#34;&gt;[Script]&lt;/a&gt; &lt;a href=&#34;https://github.com/mikedecr/PS811-computing/blob/master/assignments/skill-3/skills-task-3.pdf&#34;&gt;[Homework]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Regression (&lt;code&gt;broom&lt;/code&gt;). &lt;a href=&#34;/teaching/computing-811/slides/04_regression/04_regression.html&#34;&gt;[Slides]&lt;/a&gt; &lt;a href=&#34;https://github.com/mikedecr/PS811-computing/blob/master/code/04_regression.R&#34;&gt;[Script]&lt;/a&gt; &lt;a href=&#34;https://github.com/mikedecr/PS811-computing/blob/master/assignments/skill-4/skills-task-4.pdf&#34;&gt;[Homework]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Data reading, cleaning, joining. &lt;a href=&#34;https://uwmadison.box.com/s/xexdb1l0erj2csbnqkf0mwrvzfs0aip9&#34;&gt;[Lecture]&lt;/a&gt; &lt;a href=&#34;https://github.com/mikedecr/PS811-computing/blob/master/code/05_cleaning.R&#34;&gt;[Script]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Data shaping (&lt;code&gt;tidyr&lt;/code&gt;). &lt;a href=&#34;https://github.com/mikedecr/PS811-computing/blob/master/code/06_tidying-functions.R&#34;&gt;[Script]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;R Markdown. &lt;a href=&#34;https://github.com/mikedecr/PS811-computing/tree/master/code/Rmd&#34;&gt;[Scripts/Rmd Setup]&lt;/a&gt; &lt;a href=&#34;https://github.com/mikedecr/PS811-computing/blob/master/assignments/final/final_pt-1.pdf&#34;&gt;[Homework: Final Pt 1]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Git: Introduction. &lt;a href=&#34;/teaching/computing-811/slides/08_git/08_git-intro.html&#34;&gt;[Slides]&lt;/a&gt; &lt;a href=&#34;https://github.com/mikedecr/PS811-computing/blob/master/assignments/final/final_pt-2.pdf&#34;&gt;[Homework: Final Pt 2]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Intermediate Git: Data, branches, rewinding. &lt;a href=&#34;/teaching/computing-811/slides/09_more-git/09_more-git.html&#34;&gt;[Slides]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Functional Programming: scoped verbs, apply functions, purrr. &lt;a href=&#34;https://github.com/mikedecr/PS811-computing/blob/master/code/07_functional-programming.R&#34;&gt;[Script]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Causal Inference: regression discontinuity, bootstrapping. &lt;a href=&#34;/teaching/computing-811/slides/10_causal-modeling/10_causal-modeling.html&#34;&gt;[Slides]&lt;/a&gt; &lt;a href=&#34;https://github.com/mikedecr/PS811-computing/blob/master/code/08_rdd-bootstrap.R&#34;&gt;[Script]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Machine Learning for Prediction and Causal Inference. &lt;a href=&#34;/teaching/computing-811/slides/11_predictive-modeling/11_predictive-modeling.html&#34;&gt;[Slides]&lt;/a&gt; [Script coming soon]&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2018-materials&#34;&gt;2018 materials&lt;/h2&gt;
&lt;p&gt;In 2018, this course was split between R and Stata. I covered the R unit, and &lt;a href=&#34;https://miamioh.edu/cas/academics/departments/political-science/about/faculty-staff/faculty-bios/chapman/index.html&#34;&gt;Hannah Chapman&lt;/a&gt; covered Stata.&lt;/p&gt;
&lt;p&gt;R notes for 2018 are &lt;a href=&#34;/courses/811&#34;&gt;here&lt;/a&gt;, and the source code (&lt;code&gt;.rmd&lt;/code&gt; files) for these workbooks are &lt;a href=&#34;https://github.com/mikedecr/site-leavit/tree/master/content/811&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Partisanship, Mobilization, and Persuasion in Group Voting: A Study of the Gender Gap
</title>
      <link>/research/gender-gap/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>/research/gender-gap/</guid>
      <description>&lt;p&gt;Groups in the electorate vote differently from one another.
Racial minorities and young voters prefer Democratic candidates on average, while evangelicals and rural voters prefer Republican candidates.
How do these group differences affect party vote shares, given that the underlying groups are differently sized?
Most research characterizes voting preferences by conditioning vote choices on group membership, which obscures the numerical impact of group dynamics in voting across time.&lt;/p&gt;
&lt;p&gt;We lay out a theoretical framework and a generative modeling approach to understand how group differences in voting evolve over time and aggregate into election outcomes.
The approach decomposes group shares into useful theoretical components for understanding how groups affect elections and in what way: partisan predispositions, partisan mobilization, swing voting, and the choices of party-unaffiliated voters.
The method traces how these theoretical mechanisms change over time, and it can be extended for multichotomous groups and more complex hierarchical modeling approaches.&lt;/p&gt;
&lt;p&gt;We apply this new method to the gender gap in U.S. presidential voting.
Many observers speculate that a larger gender gap in voting—larger Democratic vote shares among women than among men—numerically benefits the Democratic Party.
We show, by contrast, that the size of the gender gap has no necessary bearing on the partisan vote outcome.
Rather, the relationship is contingent on the changing numerical impact of partisanship, partisan mobilization, and persuasion over time.
Although the gender gap and the Democratic vote in presidential elections have both increased over the years, this relationship is spurious.
The primary cause of the gender gap (partisan change) was actually harmful to the Democrats.
Meanwhile, forces that increased the Democratic vote (mobilization and persuasion) were minor influences on the gender gap.&lt;/p&gt;
&lt;p&gt;The insights enabled by this approach can be extended to other salient groups in the electorate including race, urban/rural divisions, socioeconomic groups, and more.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/research/gap-flow.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/research/gaps-time.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bayesian Causal Inference in Political Science
</title>
      <link>/research/causal-bayes/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>/research/causal-bayes/</guid>
      <description>&lt;p&gt;Causal inference and Bayesian analysis are two powerful and attractive methodological approaches for conducting empirical research, but rarely in political science does a single study employ both approaches.
This stands in contrast to other fields&amp;mdash;such as psychology, epidemiology, and biostatistics&amp;mdash;where Bayesian and causal methods are more commonly applied together.
In this paper I argue that the partition between these methodological schools in political science has no inherent basis in their fundamental goals, which are actually quite compatible.
In fact, Bayesian analysis provides a number of distinct benefits for estimating statistical models for causal inference.
The methodological partition instead owes itself to informal norms surrounding each school in empirical political science.
I discuss these sources of normative tension, describe go-to practices doing skeptical Bayesian causal inference, and demonstrate these practices using real examples from recent political science publications.
The purpose of the paper is &lt;em&gt;not&lt;/em&gt; to convince all causal inference practitioners to adopt Bayesian estimation.
The purpose is to show how Bayesian methods add value to causal effects by improving causal estimates and providing an appealing framework for evaluating causal evidence.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/research/hall-flat.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/research/reeves-pooling.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Unexceptional Gender Gap of 2016
</title>
      <link>/publication/gender-2016/</link>
      <pubDate>Thu, 01 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>/publication/gender-2016/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;/research/gap-16.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How do I reinstall my packages for R 4.0 when many of them came from Github?</title>
      <link>/post/package-reinstall/</link>
      <pubDate>Sun, 26 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/package-reinstall/</guid>
      <description>


&lt;div id=&#34;motivation&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Motivation&lt;/h1&gt;
&lt;p&gt;R 4.0 &lt;a href=&#34;https://cran.r-project.org/&#34;&gt;is here&lt;/a&gt;, and that’s great. Be warned that if you install it, you will lose all of your installed packages. How should you reinstall them?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;First,&lt;/strong&gt; there’s something to be said for installing as you go rather than inheriting all of your packages from your past self. A major upgrade can be a good excuse to clean house, trim unnecessary stuff from your computer, and &lt;a href=&#34;https://twitter.com/hadleywickham/status/1254387031842701312&#34;&gt;install packages from scratch&lt;/a&gt;. As much as I like to take this approach myself, I have to teach next week, so I want my R environment established quickly.&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you don’t particularly want to install-as-you-go, one way to revitalize your R environment is to &lt;em&gt;record which packages you have installed&lt;/em&gt; and automate their re-installation with some code. You can find several helpful online guides that &lt;a href=&#34;https://rstats.wtf/maintaining-r.html#how-to-transfer-your-library-when-updating-r&#34;&gt;walk through the main idea&lt;/a&gt;: save the names of installed packages as a vector, and then pass these names to &lt;code&gt;install.packages()&lt;/code&gt; to do a batch installation from CRAN.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;But what about the packages that don’t live on CRAN?&lt;/strong&gt; My experiments with R have led me to install several packages from Github: maybe they were “development versions” that had yet to be published on CRAN, or they will never be on CRAN due to policy incompatibilities or the wishes of the package developer. (See Reason #5 in &lt;a href=&#34;https://twitter.com/hadleywickham/status/1254421747014737920&#34;&gt;this tweet&lt;/a&gt;.) How can we automate the reinstall process when these packages have different online sources? This post walks through a process for doing that, adapted from this &lt;a href=&#34;https://gist.github.com/mikedecr/6fd2e7855c71e4358534d5af3b72a03d&#34;&gt;Gist&lt;/a&gt; that I &lt;a href=&#34;https://twitter.com/mikedecr/status/1254152352241782787&#34;&gt;shared on Twitter&lt;/a&gt;. I adapted the whole thing to go into a little &lt;a href=&#34;https://github.com/mikedecr/update-R&#34;&gt;Github repository&lt;/a&gt; if you’d like to fork/clone that instead.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;roadmap&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Roadmap&lt;/h1&gt;
&lt;p&gt;The routine has the following main ideas.&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;What packages have I installed, and where did they come from?&lt;/li&gt;
&lt;li&gt;Check my local package versions against the CRAN versions. Are the most recent versions on CRAN, or was I using a Github version that I should keep using?&lt;/li&gt;
&lt;li&gt;Render unto Caesar: install the packages from CRAN that makes sense to get from CRAN, but install the packages from Github that makes sense to get from Github.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;what-is-already-installed&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;What is already installed?&lt;/h1&gt;
&lt;p&gt;First we collect information on the packages we already have installed. I am working out of a project directory that manages all of my R updating business, so I &lt;a href=&#34;https://rstats.wtf/safe-paths.html&#34;&gt;use the &lt;code&gt;{here}&lt;/code&gt; package&lt;/a&gt; consistent with a &lt;a href=&#34;https://rstats.wtf/project-oriented-workflow.html&#34;&gt;project-oriented R workflow&lt;/a&gt;. We will also use tidyverse-style data manipulation.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;here&amp;quot;)
library(&amp;quot;tidyverse&amp;quot;)
## Warning: package &amp;#39;tibble&amp;#39; was built under R version 4.0.2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;installed.packages()&lt;/code&gt; function returns a table of package information for all packages in your library. I convert this to a tibble to make things easier.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# data frame of all installed packages
local_pkgs &amp;lt;- installed.packages() %&amp;gt;%
  as_tibble() %&amp;gt;%
  print()
## # A tibble: 392 x 16
##    Package LibPath Version Priority Depends Imports LinkingTo Suggests Enhances
##    &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;     &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt;   
##  1 abind   /Libra… 1.4-5   &amp;lt;NA&amp;gt;     &amp;quot;R (&amp;gt;=… method… &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;    &amp;lt;NA&amp;gt;    
##  2 adagio  /Libra… 0.7.1   &amp;lt;NA&amp;gt;     &amp;quot;R (&amp;gt;=… graphi… &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;    &amp;lt;NA&amp;gt;    
##  3 ade4    /Libra… 1.7-15  &amp;lt;NA&amp;gt;     &amp;quot;R (&amp;gt;=… graphi… &amp;lt;NA&amp;gt;      &amp;quot;ade4Tk… &amp;lt;NA&amp;gt;    
##  4 AER     /Libra… 1.2-9   &amp;lt;NA&amp;gt;     &amp;quot;R (&amp;gt;=… stats,… &amp;lt;NA&amp;gt;      &amp;quot;boot, … &amp;lt;NA&amp;gt;    
##  5 Amelia  /Libra… 1.7.6   &amp;lt;NA&amp;gt;     &amp;quot;R (&amp;gt;=… foreig… Rcpp (&amp;gt;=… &amp;quot;tcltk,… &amp;lt;NA&amp;gt;    
##  6 arrayh… /Libra… 1.1-0   &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;   method… &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;    &amp;lt;NA&amp;gt;    
##  7 askpass /Libra… 1.1     &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;   sys (&amp;gt;… &amp;lt;NA&amp;gt;      &amp;quot;testth… &amp;lt;NA&amp;gt;    
##  8 assert… /Libra… 0.2.1   &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;   tools   &amp;lt;NA&amp;gt;      &amp;quot;testth… &amp;lt;NA&amp;gt;    
##  9 audio   /Libra… 0.1-7   &amp;lt;NA&amp;gt;     &amp;quot;R (&amp;gt;=… &amp;lt;NA&amp;gt;    &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;    &amp;lt;NA&amp;gt;    
## 10 backpo… /Libra… 1.1.7   &amp;lt;NA&amp;gt;     &amp;quot;R (&amp;gt;=… utils   &amp;lt;NA&amp;gt;       &amp;lt;NA&amp;gt;    &amp;lt;NA&amp;gt;    
## # … with 382 more rows, and 7 more variables: License &amp;lt;chr&amp;gt;,
## #   License_is_FOSS &amp;lt;chr&amp;gt;, License_restricts_use &amp;lt;chr&amp;gt;, OS_type &amp;lt;chr&amp;gt;,
## #   MD5sum &amp;lt;chr&amp;gt;, NeedsCompilation &amp;lt;chr&amp;gt;, Built &amp;lt;chr&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is a start, but I also want to know if I got these packages from CRAN or from Github. I can do this with &lt;code&gt;sessioninfo::package_info()&lt;/code&gt;, passing a vector of package names to the function.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# get source details (cran, github...) from package_info()
local_details &amp;lt;- 
  sessioninfo::package_info(pkgs = local_pkgs$Package) %&amp;gt;%
  as_tibble() %&amp;gt;%
  select(package, local_version = ondiskversion, source) %&amp;gt;%
  print()
## # A tibble: 378 x 3
##    package      local_version source        
##    &amp;lt;chr&amp;gt;        &amp;lt;chr&amp;gt;         &amp;lt;chr&amp;gt;         
##  1 abind        1.4-5         CRAN (R 4.0.0)
##  2 adagio       0.7.1         CRAN (R 4.0.0)
##  3 ade4         1.7-15        CRAN (R 4.0.0)
##  4 AER          1.2-9         CRAN (R 4.0.0)
##  5 Amelia       1.7.6         CRAN (R 4.0.0)
##  6 arrayhelpers 1.1-0         CRAN (R 4.0.0)
##  7 askpass      1.1           CRAN (R 4.0.0)
##  8 assertthat   0.2.1         CRAN (R 4.0.0)
##  9 audio        0.1-7         CRAN (R 4.0.0)
## 10 backports    1.1.7         CRAN (R 4.0.0)
## # … with 368 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notice that this new table has 14 fewer rows. That’s because &lt;code&gt;sessioninfo::package_info()&lt;/code&gt; isn’t returning the base packages that show up in &lt;code&gt;installed.packages()&lt;/code&gt;. That’s fine, since those will come with R 4.0 anyway.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;source&lt;/code&gt; column in this new table shows us what we want to know. For instance, let’s look at packages that I have from Github.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;filter(local_details, str_detect(source, &amp;quot;Github&amp;quot;))
## # A tibble: 8 x 3
##   package       local_version source                                   
##   &amp;lt;chr&amp;gt;         &amp;lt;chr&amp;gt;         &amp;lt;chr&amp;gt;                                    
## 1 colorout      1.2-2         Github (jalvesaq/colorout@726d681)       
## 2 emo           0.0.0.9000    Github (hadley/emo@3f03b11)              
## 3 ggkeyboard    0.0.0.9009    Github (sharlagelfand/ggkeyboard@b1a965d)
## 4 mRkov         0.0.0.9000    Github (serrat839/mRkov@0f520e8)         
## 5 rethinking    2.00          Github (rmcelreath/rethinking@f393f30)   
## 6 Statamarkdown 0.4.5         Github (hemken/Statamarkdown@506cfc9)    
## 7 texreg        1.36.28       Github (leifeld/texreg@c1da5c8)          
## 8 waffle        1.0.1         Github (hrbrmstr/waffle@3f61463)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;determining-install-source-by-comparing-package-versions&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Determining install source by comparing package versions&lt;/h1&gt;
&lt;p&gt;Before you update R, you may be using packages installed from Github, even if those packages are also on CRAN. We want to compare our locally installed package versions against the versions on CRAN. If the CRAN versions are more recent, we can go ahead and get those packages from CRAN. If the Github versions are still the most recent (or the &lt;em&gt;only&lt;/em&gt;) versions of some packages, we want to get them from Github.&lt;/p&gt;
&lt;p&gt;We will want to get a table of data on CRAN package versions. The &lt;code&gt;available.packages()&lt;/code&gt; function returns info for &lt;strong&gt;all&lt;/strong&gt; packages on CRAN.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# available.packages() returns pkg info for ALL pkgs on CRAN.
cran_pkgs &amp;lt;- available.packages() %&amp;gt;% 
  as_tibble(.name_repair = tolower) %&amp;gt;%
  print()
## # A tibble: 16,578 x 17
##    package version priority depends imports linkingto suggests enhances license
##    &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;     &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt;  
##  1 A3      1.0.0   &amp;lt;NA&amp;gt;     R (&amp;gt;= …  &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;      randomF… &amp;lt;NA&amp;gt;     GPL (&amp;gt;…
##  2 aaSEA   1.1.0   &amp;lt;NA&amp;gt;     R(&amp;gt;= 3… &amp;quot;DT(&amp;gt;=… &amp;lt;NA&amp;gt;      knitr, … &amp;lt;NA&amp;gt;     GPL-3  
##  3 AATtoo… 0.0.1   &amp;lt;NA&amp;gt;     R (&amp;gt;= … &amp;quot;magri… &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;     &amp;lt;NA&amp;gt;     GPL-3  
##  4 ABACUS  1.0.0   &amp;lt;NA&amp;gt;     R (&amp;gt;= … &amp;quot;ggplo… &amp;lt;NA&amp;gt;      rmarkdo… &amp;lt;NA&amp;gt;     GPL-3  
##  5 abbyyR  0.5.5   &amp;lt;NA&amp;gt;     R (&amp;gt;= … &amp;quot;httr,… &amp;lt;NA&amp;gt;      testtha… &amp;lt;NA&amp;gt;     MIT + …
##  6 abc     2.1     &amp;lt;NA&amp;gt;     R (&amp;gt;= …  &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;     &amp;lt;NA&amp;gt;     GPL (&amp;gt;…
##  7 abc.da… 1.0     &amp;lt;NA&amp;gt;     R (&amp;gt;= …  &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;     &amp;lt;NA&amp;gt;     GPL (&amp;gt;…
##  8 ABC.RAP 0.9.0   &amp;lt;NA&amp;gt;     R (&amp;gt;= … &amp;quot;graph… &amp;lt;NA&amp;gt;      knitr, … &amp;lt;NA&amp;gt;     GPL-3  
##  9 abcADM  1.0     &amp;lt;NA&amp;gt;     &amp;lt;NA&amp;gt;    &amp;quot;Rcpp … Rcpp, BH  &amp;lt;NA&amp;gt;     &amp;lt;NA&amp;gt;     GPL-3  
## 10 ABCana… 1.2.1   &amp;lt;NA&amp;gt;     R (&amp;gt;= … &amp;quot;plotr… &amp;lt;NA&amp;gt;      &amp;lt;NA&amp;gt;     &amp;lt;NA&amp;gt;     GPL-3  
## # … with 16,568 more rows, and 8 more variables: license_is_foss &amp;lt;chr&amp;gt;,
## #   license_restricts_use &amp;lt;chr&amp;gt;, os_type &amp;lt;chr&amp;gt;, archs &amp;lt;chr&amp;gt;, md5sum &amp;lt;chr&amp;gt;,
## #   needscompilation &amp;lt;chr&amp;gt;, file &amp;lt;chr&amp;gt;, repository &amp;lt;chr&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We only care about the packages in this table that we have already installed, so we will narrow the table down using a join.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;slimmer_frame &amp;lt;- 
  left_join(
    x = select(local_details, package, local_version, source),
    y = select(cran_pkgs, package, cran_version = version)
  ) %&amp;gt;%
  print()
## # A tibble: 378 x 4
##    package      local_version source         cran_version
##    &amp;lt;chr&amp;gt;        &amp;lt;chr&amp;gt;         &amp;lt;chr&amp;gt;          &amp;lt;chr&amp;gt;       
##  1 abind        1.4-5         CRAN (R 4.0.0) 1.4-5       
##  2 adagio       0.7.1         CRAN (R 4.0.0) 0.7.1       
##  3 ade4         1.7-15        CRAN (R 4.0.0) 1.7-16      
##  4 AER          1.2-9         CRAN (R 4.0.0) 1.2-9       
##  5 Amelia       1.7.6         CRAN (R 4.0.0) 1.7.6       
##  6 arrayhelpers 1.1-0         CRAN (R 4.0.0) 1.1-0       
##  7 askpass      1.1           CRAN (R 4.0.0) 1.1         
##  8 assertthat   0.2.1         CRAN (R 4.0.0) 0.2.1       
##  9 audio        0.1-7         CRAN (R 4.0.0) 0.1-7       
## 10 backports    1.1.7         CRAN (R 4.0.0) 1.2.0       
## # … with 368 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Using this slimmer table, we categorize the sources of these packages and where we want to reinstall them from. Here is the basic idea: &lt;strong&gt;We want to install from Github only if our local Github version is more recent than the CRAN version.&lt;/strong&gt; This also applies when there is no version of a package on CRAN.&lt;/p&gt;
&lt;p&gt;Stated another way, we install a package from CRAN in any case that the CRAN version is more recent than the local version. This is true even if the local version was installed from Github! Remember, we don’t install from Github simply because we did so in the past. We install from Github if there is no better choice.&lt;/p&gt;
&lt;p&gt;There are edge cases to be aware of: we may find that the CRAN version of a package is behind our local version, &lt;em&gt;even if&lt;/em&gt; the local version was installed from CRAN. This happens for (at least) two reasons: if a package version was reverted on CRAN (which appeared to happen in the case of &lt;a href=&#34;https://github.com/cran/StanHeaders/commit/2294a66cb1876568b6af74a6c4a1233bf6b6e00f&#34;&gt;StanHeaders&lt;/a&gt;), or if the package is currently unavailable for installation from CRAN (due to some incompatibility, perhaps).&lt;/p&gt;
&lt;p&gt;The code below does this categorization using the &lt;code&gt;utils::compareVersion()&lt;/code&gt; function, which interprets the version numbers so we don’t have to. We do an additional step to note the Github repostory for any package that we still want to obtain from Github.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;compare_frame &amp;lt;- slimmer_frame %&amp;gt;%
  group_by(package) %&amp;gt;% 
  mutate(
    source_locale = case_when(
      compareVersion(local_version, cran_version) == 1 &amp;amp;
        str_detect(source, &amp;quot;Github&amp;quot;) ~ &amp;quot;Github&amp;quot;,
      compareVersion(local_version, cran_version) == 1 &amp;amp;
        is.na(cran_version) &amp;amp;
        str_detect(source, &amp;quot;CRAN&amp;quot;) ~ &amp;quot;Unavailable on CRAN&amp;quot;,
      compareVersion(local_version, cran_version) == 1 &amp;amp;
        (is.na(cran_version) == FALSE) &amp;amp;
        str_detect(source, &amp;quot;CRAN&amp;quot;) ~ &amp;quot;Downgraded on CRAN&amp;quot;,
      compareVersion(local_version, cran_version) %in% c(-1, 0) ~ &amp;quot;CRAN&amp;quot;
    ),
    github_repo = case_when(
      source_locale == &amp;quot;Github&amp;quot; ~ 
        str_split(string = source, pattern = &amp;quot;@&amp;quot;, simplify = TRUE)[,1] %&amp;gt;%
        str_replace(&amp;quot;Github \\(&amp;quot;, &amp;quot;&amp;quot;),
      TRUE ~ as.character(NA)
    ),
  ) %&amp;gt;%
  ungroup() %&amp;gt;%
  print()
## # A tibble: 378 x 6
##    package     local_version source       cran_version source_locale github_repo
##    &amp;lt;chr&amp;gt;       &amp;lt;chr&amp;gt;         &amp;lt;chr&amp;gt;        &amp;lt;chr&amp;gt;        &amp;lt;chr&amp;gt;         &amp;lt;chr&amp;gt;      
##  1 abind       1.4-5         CRAN (R 4.0… 1.4-5        CRAN          &amp;lt;NA&amp;gt;       
##  2 adagio      0.7.1         CRAN (R 4.0… 0.7.1        CRAN          &amp;lt;NA&amp;gt;       
##  3 ade4        1.7-15        CRAN (R 4.0… 1.7-16       CRAN          &amp;lt;NA&amp;gt;       
##  4 AER         1.2-9         CRAN (R 4.0… 1.2-9        CRAN          &amp;lt;NA&amp;gt;       
##  5 Amelia      1.7.6         CRAN (R 4.0… 1.7.6        CRAN          &amp;lt;NA&amp;gt;       
##  6 arrayhelpe… 1.1-0         CRAN (R 4.0… 1.1-0        CRAN          &amp;lt;NA&amp;gt;       
##  7 askpass     1.1           CRAN (R 4.0… 1.1          CRAN          &amp;lt;NA&amp;gt;       
##  8 assertthat  0.2.1         CRAN (R 4.0… 0.2.1        CRAN          &amp;lt;NA&amp;gt;       
##  9 audio       0.1-7         CRAN (R 4.0… 0.1-7        CRAN          &amp;lt;NA&amp;gt;       
## 10 backports   1.1.7         CRAN (R 4.0… 1.2.0        CRAN          &amp;lt;NA&amp;gt;       
## # … with 368 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;updating-r-and-reinstalling-packages&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Updating R and reinstalling packages&lt;/h1&gt;
&lt;p&gt;When we are satisfied with our decisions about where to install a package from, save this comparison table to file.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# output data location
dir.create(here(&amp;quot;data&amp;quot;))

# output file
out_file &amp;lt;- as.character(str_glue(&amp;quot;pkg-data_{Sys.Date()}.rds&amp;quot;))
write_rds(compare_frame, here(&amp;quot;data&amp;quot;, out_file))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After updating, we reopen R and install our packages according to our classifications. We want to begin by installing &lt;code&gt;{remotes}&lt;/code&gt; to enable installation from Github.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# to install from github
install.packages(&amp;quot;remotes&amp;quot;)

# should still be operating in your working directory
# so downloading {here} makes sense also
install.packages(&amp;quot;here&amp;quot;)

# read package data
pkgs &amp;lt;- readRDS(here::here(&amp;quot;data&amp;quot;, &amp;quot;pkg-data_2020-04-25.rds&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Everything that we want to install from Github, we install by iterating &lt;code&gt;remotes::install_github&lt;/code&gt; over the github repository slugs that we saved previously. This requires us to write the code in “hard mode” because we aren’t using tidyverse dialect.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# install from github repos
github_pkgs &amp;lt;- pkgs[pkgs$source_locale == &amp;quot;Github&amp;quot;, ][[&amp;quot;github_repo&amp;quot;]]

remotes::install_github(github_pkgs)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, everything that we said we wouldn’t get from Github, we get by using plain ol’ &lt;code&gt;install.packages()&lt;/code&gt;. Before doing this, you may find it beneficial to filter out some of the packages that you don’t use anymore or that maybe we only installed as dependencies for other packages.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# install from cran with remaining package names
cran_pkgs &amp;lt;- pkgs[pkgs$source_locale != &amp;quot;Github&amp;quot;, ][[&amp;quot;package&amp;quot;]]

install.packages(cran_pkgs)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This should get you (more or less) up and running with R 4.0 and all of your old packages.&lt;/p&gt;
&lt;p&gt;Fair warning: I’m already getting burned by some C++ configuration problems for packages that want to compile from source. I think this is particular to my own computer and the klugey fixes I undertook to set up &lt;code&gt;{rstan}&lt;/code&gt; with MacOS Catalina. I remember reading somewhere that R 4.0 fixed some of the Stan x Catalina problems, so maybe I will confront these choices again soon, but I will cross that bridge when I get to it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;
And maybe I will do a fresh install of &lt;em&gt;everything&lt;/em&gt; once the semester is over.&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
